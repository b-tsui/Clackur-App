{"version":3,"sources":["react-auth0-spa.js","components/PrivateRoute.js","components/NavBar.js","components/SinglePost.js","components/Loading.js","components/Home.js","views/ExternalApi.js","components/NewPost.js","components/SinglePostDetails.js","components/Profile.js","utils/history.js","App.js","serviceWorker.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","getTokenSilently","token","fetch","method","body","JSON","stringify","name","nickname","email","headers","Authorization","res","json","response","newUser","userId","id","initAuth0","loginWithPopup","params","console","error","Provider","value","getIdTokenClaims","loginWithRedirect","getTokenWithPopup","logout","PrivateRoute","Component","component","path","rest","targetUrl","fn","render","props","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","NavBar","classes","className","AppBar","position","Toolbar","Typography","variant","href","alt","src","height","width","to","Button","onClick","maxWidth","background","SinglePost","post","Votes","filter","vote","upVote","length","upvotes","setUpvotes","downVote","downvotes","setDownvotes","upVoteHandler","e","status","downVoteHandler","Card","style","margin","CardActionArea","CardMedia","image","imageUrl","CardContent","CardActions","IconButton","Loading","Home","posts","setPosts","loadPosts","map","key","ExternalApi","showResult","setShowResult","apiMessage","setApiMessage","callApi","responseData","minWidth","form","App","fileNames","setFileNames","imageUrls","setImageUrls","postTitle","setPostTitle","postDescription","setPostDescription","imageData","useRef","FormData","handleDrop","acceptedFiles","current","set","file","URL","createObjectURL","handlePostSubmit","preventDefault","alert","imageRes","imageResData","categoryId","description","public","ok","onSubmit","Paper","autoComplete","TextField","label","onChange","target","required","onDrop","accept","getRootProps","getInputProps","padding","fileName","type","color","maxHeight","media","paddingTop","avatar","backgroundColor","red","SinglePostDetails","postData","setPostData","postDetailsRes","getPostDetails","User","CardHeader","Avatar","aria-label","slice","action","subheader","Date","createdAt","disableSpacing","Profile","picture","createBrowserHistory","myTheme","createMuiTheme","palette","primary","main","secondary","default","ThemeProvider","CssBaseline","exact","NewPost","Boolean","hostname","match","ReactDOM","domain","config","client_id","clientId","redirect_uri","origin","audience","push","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4ed24237.chunk.js","sourcesContent":["// src/react-auth0-spa.js\nimport React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n    window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n    children,\n    onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n    ...initOptions\n}) => {\n    const [isAuthenticated, setIsAuthenticated] = useState();\n    const [user, setUser] = useState();\n    const [auth0Client, setAuth0] = useState();\n    const [loading, setLoading] = useState(true);\n    const [popupOpen, setPopupOpen] = useState(false);\n\n    useEffect(() => {\n        const initAuth0 = async () => {\n            const auth0FromHook = await createAuth0Client(initOptions);\n            setAuth0(auth0FromHook);\n\n            if (window.location.search.includes(\"code=\") &&\n                window.location.search.includes(\"state=\")) {\n                const { appState } = await auth0FromHook.handleRedirectCallback();\n                onRedirectCallback(appState);\n            }\n\n            const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n            setIsAuthenticated(isAuthenticated);\n\n            if (isAuthenticated) {\n                const user = await auth0FromHook.getUser();\n                let token = await auth0FromHook.getTokenSilently();\n                const res = await fetch(`https://clackur-backend.herokuapp.com/users/login`, {\n                    method: \"PATCH\",\n                    body: JSON.stringify({ name: user.nickname, email: user.email }),\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${token}`,\n                    }\n                })\n                //fetch path on user on the backend\n                const response = await res.json();\n                if (response.newUser) {\n                    setUser({ ...user, userId: response.newUser.id });\n                } else {\n                    setUser({ ...user, userId: response.user.id })\n                }\n            }\n\n            setLoading(false);\n        };\n        initAuth0();\n        // eslint-disable-next-line\n    }, []);\n\n    const loginWithPopup = async (params = {}) => {\n        setPopupOpen(true);\n        try {\n            await auth0Client.loginWithPopup(params);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setPopupOpen(false);\n        }\n        const user = await auth0Client.getUser();\n        setUser(user);\n        setIsAuthenticated(true);\n    };\n\n    const handleRedirectCallback = async () => {\n        setLoading(true);\n        await auth0Client.handleRedirectCallback();\n        const user = await auth0Client.getUser();\n        setLoading(false);\n        setIsAuthenticated(true);\n        setUser(user);\n    };\n    return (\n        <Auth0Context.Provider\n            value={{\n                isAuthenticated,\n                user,\n                loading,\n                popupOpen,\n                loginWithPopup,\n                handleRedirectCallback,\n                getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n                loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n                getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n                getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n                logout: (...p) => auth0Client.logout(...p)\n            }}\n        >\n            {children}\n        </Auth0Context.Provider>\n    );\n};","// src/components/PrivateRoute.js\n\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n    const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\n\n    useEffect(() => {\n        if (loading || isAuthenticated) {\n            return;\n        }\n        const fn = async () => {\n            await loginWithRedirect({\n                appState: { targetUrl: window.location.pathname }\n            });\n        };\n        fn();\n    }, [loading, isAuthenticated, loginWithRedirect, path]);\n\n    const render = props =>\n        isAuthenticated === true ? <Component {...props} /> : null;\n\n    return <Route path={path} render={render} {...rest} />;\n};\n\nexport default PrivateRoute;","\nimport React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport '../styles/navbar-styles.css'\n\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport { Link } from \"react-router-dom\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function NavBar() {\n    const classes = useStyles();\n    const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        <a href=\"/\" id=\"navbar-logo\">\n                            <img alt=\"clackur logo\"\n                                src=\"https://clackurbucket.s3.us-east-2.amazonaws.com/1589431160842\"\n                                height=\"40\"\n                                width=\"40\"\n                            />&nbsp;lackur\n                        </a>\n                    </Typography>\n                    {isAuthenticated && (\n                        <>\n                            <Link to='/'>\n                                <Button>Home</ Button>\n                            </Link>\n                            <Link to=\"/posts/new\" ><Button>New Post</Button></Link>\n                            <Link to=\"/profile\"><Button>Profile</Button></Link>\n                            {/* <Link to=\"/external-api\">External API</Link> */}\n                        </>\n                    )}\n                    {!isAuthenticated && (\n                        <Button onClick={() => loginWithRedirect({})}>Log in</Button>\n                    )}\n                    {isAuthenticated && <Button onClick={() => logout()}>Log out</Button>}\n                </Toolbar>\n            </AppBar>\n\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport { useAuth0 } from \"../react-auth0-spa\"\nimport { Link } from \"react-router-dom\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n        background: '#FAF5FB'\n    },\n});\n\nexport default function SinglePost({ post }) {\n    const [upvotes, setUpvotes] = useState(post.Votes.filter(vote => vote.upVote).length);\n    const [downvotes, setDownvotes] = useState(post.Votes.filter(vote => vote.downVote).length);\n\n    const { user, getTokenSilently } = useAuth0()\n    const classes = useStyles();\n\n    const upVoteHandler = async (e) => {\n        if (user) {\n            const token = await getTokenSilently();\n            let res = await fetch(`https://clackur-backend.herokuapp.com/posts/${post.id}/upvote`, {\n                method: \"PATCH\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({ userId: user.userId })\n            });\n            //sets local state so front end displays the votes dynamically\n            if (res.status === 204) {\n                setUpvotes(upvotes - 1);\n            }\n            if (res.status === 201) {\n                setUpvotes(upvotes + 1);\n            }\n            if (res.status === 206) {\n                setUpvotes(upvotes + 1);\n                setDownvotes(downvotes - 1);\n            }\n        } else {\n            return;\n        }\n    }\n    const downVoteHandler = async (e) => {\n        if (user) {\n            const token = await getTokenSilently();\n            let res = await fetch(`https://clackur-backend.herokuapp.com/posts/${post.id}/downvote`, {\n                method: \"PATCH\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({ userId: user.userId })\n            });\n            if (res.status === 204) {\n                setDownvotes(downvotes - 1);\n            }\n            if (res.status === 201) {\n                setDownvotes(downvotes + 1);\n            }\n            if (res.status === 206) {\n                setDownvotes(downvotes + 1);\n                setUpvotes(upvotes - 1);\n            }\n        } else {\n            return;\n        }\n    }\n\n    return (\n        <Card className={classes.root} style={{ margin: '10px' }}>\n            <Link to={{\n                pathname: `/posts/${post.id}`,\n                post\n            }} >\n                <CardActionArea >\n                    <CardMedia\n                        component=\"img\"\n                        alt={post.title}\n                        height=\"180\"\n                        image={post.imageUrl}\n                        title={post.title}\n                    />\n                    <CardContent>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            {post.title}\n                        </Typography>\n                        {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {post.description}\n                        </Typography> */}\n                    </CardContent>\n                </CardActionArea>\n            </Link>\n            <CardActions>\n                <IconButton onClick={upVoteHandler}>\n                    <KeyboardArrowUpIcon />\n                    <Typography variant=\"subtitle1\">{upvotes}</Typography>\n                </IconButton>\n                <IconButton onClick={downVoteHandler}>\n                    <KeyboardArrowDownIcon />\n                    <Typography variant=\"subtitle1\">{-1 * downvotes}</Typography>\n                </IconButton>\n            </CardActions>\n        </Card >\n    );\n}\n","import React from 'react';\n\nexport default function Loading() {\n    return (\n        <>\n            <img alt=\"mxblue\" src={'../views/images/mxblue.gif'} />\n        </>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\"\nimport SinglePost from \"./SinglePost\"\nimport Loading from \"./Loading\"\nimport '../styles/home-page.css'\n\n\nconst Home = () => {\n    const [posts, setPosts] = useState([]);\n\n    const { user, loading } = useAuth0();\n\n    useEffect(() => {\n        const loadPosts = async () => {\n            try {\n                const res = await fetch(`https://clackur-backend.herokuapp.com/posts`)\n                const { posts } = await res.json();\n                setPosts(posts)\n            } catch (error) {\n                console.error(error);\n            }\n        }\n        loadPosts();\n    }, [])\n\n    if (!user) {\n        return <div className=\"posts-container\">{posts.map((post) => <SinglePost post={post} key={post.id} />)}</div>\n\n    } else {\n        if (loading) {\n            return <Loading />\n        }\n        return (\n            <>\n                {/* <div>{JSON.stringify(user)}</div> */}\n                <div className=\"home-welcome\">Welcome, {user.name}</div>\n                <div className=\"posts-container\">{posts.map((post) => <SinglePost post={post} key={post.id} />)}</div>\n            </>\n        );\n    }\n};\n\nexport default Home;","// src/views/ExternalApi.js\n\nimport React, { useState } from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst ExternalApi = () => {\n    const [showResult, setShowResult] = useState(false);\n    const [apiMessage, setApiMessage] = useState(\"\");\n    const { getTokenSilently } = useAuth0();\n\n    const callApi = async () => {\n        try {\n            const token = await getTokenSilently();\n\n            const response = await fetch(\"https://clackur-backend.herokuapp.com/api/external\", {\n                headers: {\n                    Authorization: `Bearer ${token}`\n                }\n            });\n\n            const responseData = await response.json();\n\n            setShowResult(true);\n            setApiMessage(responseData);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    return (\n        <>\n            <h1>External API</h1>\n            <button onClick={callApi}>Ping API</button>\n            {showResult && <code>{JSON.stringify(apiMessage, null, 2)}</code>}\n        </>\n    );\n};\n\nexport default ExternalApi;","import React, { useState, useRef } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dropzone from \"react-dropzone\";\nimport Paper from '@material-ui/core/Paper';\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport '../styles/new-post-page.css'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            minWidth: 400,\n            width: '60vw',\n            background: '#FAF5FB'\n        },\n    },\n    form: {\n        width: '60vw'\n    }\n}));\n\nexport default function App() {\n    const [fileNames, setFileNames] = useState([]);\n    const [imageUrls, setImageUrls] = useState([]);\n    const [postTitle, setPostTitle] = useState('');\n    const [postDescription, setPostDescription] = useState('')\n\n    //keeps image data from uploaded image current\n    //must use .current to get the current state var\n    const imageData = useRef(new FormData());\n\n    //gets token geterator and user info from Auth0\n    const { user, getTokenSilently } = useAuth0();\n\n    //for material ui\n    const classes = useStyles();\n\n    //adds dragndropped photo to image data and sets vars for image preview\n    const handleDrop = async (acceptedFiles) => {\n\n        imageData.current.set(`file`, acceptedFiles[0]);\n\n        setFileNames(acceptedFiles.map(file => file.name));\n        //sets temp image url in state for photo preview\n        setImageUrls(acceptedFiles.map(file => URL.createObjectURL(file)));\n\n    }\n\n    //updates state with form field values as they're being typed\n    const handleFormTitle = (e) => setPostTitle(e.target.value);\n    const handleFormDescription = (e) => setPostDescription(e.target.value);\n\n    /**/\n    const handlePostSubmit = async (e) => {\n        e.preventDefault();\n\n        //makes sure a photo was uploaded\n        if (imageUrls.length === 0) {\n            alert('please upload a photo');\n            return;\n        }\n\n        //gets token for authentication\n        const token = await getTokenSilently();\n        //uploads image to aws and receives image url\n        const imageRes = await fetch('https://clackur-backend.herokuapp.com/posts/image/upload', {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${token}`\n            },\n            body: imageData.current\n        });\n        const imageResData = await imageRes.json();\n\n        const postRes = await fetch('https://clackur-backend.herokuapp.com/posts/new', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                categoryId: 1,\n                userId: user.userId,\n                title: postTitle,\n                description: postDescription,\n                imageUrl: imageResData.imageUrl,\n                public: true\n            })\n        });\n        if (postRes.ok) {\n            window.location.href = '/'\n        }\n\n    }\n\n    return (\n        <div id=\"new-post-form-container\" onSubmit={handlePostSubmit} >\n            <Paper>\n                <form className={`${classes.root} new-post-form`} autoComplete=\"off\">\n                    <TextField id=\"new-post-title\"\n                        label=\"Add a Title\"\n                        variant=\"outlined\"\n                        value={postTitle}\n                        onChange={handleFormTitle}\n                        required\n                    />\n                    <TextField id=\"new-post-description\"\n                        label=\"Add a Description\"\n                        variant=\"outlined\"\n                        value={postDescription}\n                        onChange={handleFormDescription}\n                        required\n                    />\n\n\n                    {/* dropzone component comes from react-dropzone\n                and allows client to drag/drop or upload an image to post */}\n                    <Paper className=\"drop-zone\">\n                        <Dropzone onDrop={handleDrop} accept=\"image/*\" >\n                            {({ getRootProps, getInputProps }) => (\n                                <div {...getRootProps({ className: \"dropzone\" })}>\n                                    <input {...getInputProps()} />\n                                    <p style={{ padding: \"10px\" }} >Drag/drop image, or click to select image</p>\n                                </div>\n                            )}\n                        </Dropzone>\n                    </Paper>\n                    <div>\n                        File: {fileNames.map(fileName => (\n                        <li key={fileName}>{fileName}</li>\n                    ))}\n\n                        <div>Preview:</div>\n                        {imageUrls.map(imageUrl => (\n                            <img alt={postTitle} key={imageUrl} src={imageUrl} width=\"100%\" />\n                        ))}\n                    </div>\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                        Post\n                </Button>\n                </form>\n            </Paper>\n        </div >\n    );\n}","import React, { useState, useEffect } from 'react';\nimport { useAuth0 } from \"../react-auth0-spa\"\nimport '../styles/post-details.css'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxHeight: \"60%\",\n        maxWidth: \"60%\",\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\n\nexport default function SinglePostDetails({ location }) {\n\n    const [postData, setPostData] = useState({})\n    const [upvotes, setUpvotes] = useState(0);\n    const [downvotes, setDownvotes] = useState(0);\n\n\n    const classes = useStyles();\n    const { user, getTokenSilently } = useAuth0()\n\n    useEffect(() => {\n        const getPostDetails = async () => {\n            //fetch post @ location.pathname\n            const postDetailsRes = await fetch(`https://clackur-backend.herokuapp.com${location.pathname}`)\n            const { post } = await postDetailsRes.json();\n            //postData.current = post;\n            setPostData(post)\n            setUpvotes(post.Votes.filter(vote => vote.upVote).length)\n            setDownvotes(post.Votes.filter(vote => vote.downVote).length)\n        }\n        getPostDetails();\n    }, [location.pathname]);\n\n\n    const upVoteHandler = async (e) => {\n        if (user) {\n            const token = await getTokenSilently();\n            let res = await fetch(`https://clackur-backend.herokuapp.com/posts/${postData.id}/upvote`, {\n                method: \"PATCH\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({ userId: user.userId })\n            });\n            //sets local state so front end displays the votes dynamically\n            if (res.status === 204) {\n                setUpvotes(upvotes - 1);\n            }\n            if (res.status === 201) {\n                setUpvotes(upvotes + 1);\n            }\n            if (res.status === 206) {\n                setUpvotes(upvotes + 1);\n                setDownvotes(downvotes - 1);\n            }\n        } else {\n            return;\n        }\n    }\n    const downVoteHandler = async (e) => {\n        if (user) {\n            const token = await getTokenSilently();\n            let res = await fetch(`https://clackur-backend.herokuapp.com/posts/${postData.id}/downvote`, {\n                method: \"PATCH\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({ userId: user.userId })\n            });\n            if (res.status === 204) {\n                setDownvotes(downvotes - 1);\n            }\n            if (res.status === 201) {\n                setDownvotes(downvotes + 1);\n            }\n            if (res.status === 206) {\n                setDownvotes(downvotes + 1);\n                setUpvotes(upvotes - 1);\n            }\n        } else {\n            return;\n        }\n    }\n    if (!postData.User) {\n        return <div>loading</div>\n    }\n    return (\n        <div id=\"single-post-detail-card-container\">\n            < Card className={classes.root} >\n                <CardHeader\n                    avatar={\n                        <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                            {postData.User.name.slice(0, 2)}\n                        </Avatar>\n                    }\n                    action={\n                        <IconButton aria-label=\"settings\">\n                            <MoreVertIcon />\n                        </IconButton>\n                    }\n                    title={\n                        <Typography variant=\"h5\" component=\"h2\">\n                            {postData.title}\n                        </Typography>\n                    }\n                    subheader={\n                        <>\n                            <div>by {postData.User.name}</div>\n                            <div>{Date(postData.createdAt)}</div>\n                        </>\n                    }\n                />\n                <CardMedia\n                    component=\"img\"\n                    height='50%'\n                    alt={postData.title}\n                    image={postData.imageUrl}\n                    title={postData.title}\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {postData.description}\n                    </Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                    <IconButton onClick={upVoteHandler}>\n                        <KeyboardArrowUpIcon />\n                        <Typography variant=\"subtitle1\">{upvotes}</Typography>\n                    </IconButton>\n                    <IconButton onClick={downVoteHandler}>\n                        <KeyboardArrowDownIcon />\n                        <Typography variant=\"subtitle1\">{-1 * downvotes}</Typography>\n                    </IconButton>\n                </CardActions>\n            </Card >\n        </div>\n    );\n}","import React, { Fragment, useState, useEffect } from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport SinglePost from \"./SinglePost\"\nimport '../styles/user-info.css'\n\nconst Profile = () => {\n    const [posts, setPosts] = useState([]);\n    const { loading, user } = useAuth0();\n\n    useEffect(() => {\n        if (user) {\n            const loadPosts = async () => {\n                try {\n                    const res = await fetch(`https://clackur-backend.herokuapp.com/posts/user/${user.userId}`)\n                    const { posts } = await res.json();\n                    setPosts(posts)\n                } catch (error) {\n                    console.error(error);\n                }\n            }\n            loadPosts();\n        }\n    }, [user])\n\n    if (loading || !user) {\n        return <div>Loading...</div>;\n    }\n    return (\n        <Fragment>\n            <div className=\"user-info-container\">\n                <img src={user.picture} alt=\"Profile\" style={{ 'border-radius': '50%' }} />\n                <h3>{user.name}</h3>\n                <h1>My Posts</h1>\n                {/* <p>{user.email}</p> */}\n            </div>\n            <div className=\"posts-container\">{posts.map((post) => <SinglePost post={post} key={post.id} />)}</div>\n        </Fragment>\n    );\n};\n\nexport default Profile;","// src/utils/history.js\n\nimport { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","import React from \"react\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport NavBar from \"./components/NavBar\";\nimport Home from \"./components/Home\";\nimport ExternalApi from \"./views/ExternalApi\";\nimport NewPost from \"./components/NewPost\";\nimport SinglePostDetails from \"./components/SinglePostDetails\"\n\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport Profile from \"./components/Profile\";\nimport history from \"./utils/history\";\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nconst myTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#9B9EBA',\n    },\n    secondary: {\n      main: '#64b5f6',\n    },\n    background: {\n      default: \"#DEE2FF\"\n    }\n  },\n})\n\n\nfunction App() {\n  return (\n    <ThemeProvider theme={myTheme}>\n      <CssBaseline />\n      <div className=\"App\">\n        <Router history={history}>\n          <header>\n            <NavBar />\n          </header>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <PrivateRoute path=\"/profile\" component={Profile} />\n            <PrivateRoute path=\"/external-api\" component={ExternalApi} />\n            <PrivateRoute exact path=\"/posts/new\" component={NewPost} />\n            <Route path=\"/posts/:id\" component={SinglePostDetails} />\n          </Switch>\n        </Router>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// src/index.js\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Auth0Provider } from \"./react-auth0-spa\";\nimport config from \"./auth_config.json\";\nimport history from \"./utils/history\";\n\n// A function that routes the user to the right place\n// after login\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    redirect_uri={window.location.origin}\n    audience={config.audience}\n    onRedirectCallback={onRedirectCallback}\n\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}